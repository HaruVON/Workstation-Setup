#!/bin/bash

SCRIPT_PATH=$(dirname "$(readlink -f "$0")")
PYTHON_VERSION="3.10.4"
TOOLS_PATH=$Home/.tools
KALI=0

if ( grep kali /etc/os-release ); then
    KALI=1
fi

echo -e "#############################################################\n \
	               Updating System                       \n \
#############################################################\n";

sudo apt update > /dev/null
sudo apt full-upgrade -y > /dev/null
sudo apt autoremove -y > /dev/null


# Install Pyenv dependencies
sudo apt install make build-essential libssl-dev zlib1g-dev \
	libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
	libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev -y;

if [[ ! -d ~/.pyenv ]]; then

	echo -e "#############################################################\n \
		               Installing pyenv                      \n \
#############################################################\n";

	# Install pyenv
	curl https://pyenv.run | bash
	# exec $SHELL;

	# the sed invocation inserts the lines at the start of the file
	# after any initial comment lines
	# the sed invocation inserts the lines at the start of the file
	# after any initial comment lines
#	sed -Ei -e '/^([^#]|$)/ {a \
#	export PYENV_ROOT="$HOME/.pyenv"
#	a \
#	export PATH="$PYENV_ROOT/bin:$PATH"
#	a \
#	' -e ':a' -e '$!{n;ba};}' ~/.profile;
#	echo 'eval "$(pyenv init --path)"' >>~/.profile
#	echo 'eval "$(pyenv init -)"' >> ~/.bashrc
fi


# Install newest version of python
~/.pyenv/bin/pyenv install $PYTHON_VERSION
~/.pyenv/bin/pyenv global $PYTHON_VERSION


echo -e "#############################################################\n\
	               Installing pipenv, pwntools           \n\
#############################################################\n";


# Install pipenv
~/.pyenv/versions/$PYTHON_VERSION/bin/pip install --upgrade pip
~/.pyenv/versions/$PYTHON_VERSION/bin/pip install --upgrade pipx
~/.pyenv/versions/$PYTHON_VERSION/bin/pip install --upgrade pwntools
~/.pyenv/versions/$PYTHON_VERSION/bin/pipx install pipenv
~/.pyenv/versions/$PYTHON_VERSION/bin/pipx install httpie


echo -e "#############################################################\n\
	               Installing a bunch of packages        \n\
#############################################################\n";


#install necessary tools
sudo apt install zsh tmux cinnamon desktop-base gdb cmake gnome-terminal figlet \
    filters fortunes bsdgames bsdgames-nonfree dos2unix asciinema python3-pyx \
    squashfs-tools squashfs-tools-ng zlib1g-dev liblzma-dev liblzo2-dev docker.io \
    docker-compose containerd xfsprogs git neovim -y; 

# Install OhMyZsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
git clone https://github.com/zsh-users/zsh-history-substring-search ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting


# Kali Install
if [[ KALI -eq 1 ]]; then
    
    # Base Kali Install
    sudo apt install kali-defaults kali-root-login postman wireshark bruteshark \
        hashcat -y; 
    
    # Full Kali Instal
    sudo apt install kali-tools-gpu kali-tools-hardware kali-tools-fuzzing \
        kali-tools-sdr kali-tools-rfid kali-tools-information-gathering \
        kali-tools-vulnerability kali-tools-passwords kali-tools-wireless \
        kali-tools-reverse-engineering kali-tools-exploitation kali-tools-forensics \
        cmake libboost-all-dev texlive-full auctex fontforge doxygen python3-scipy \
        python3-numpy graphviz radare2-cutter -y
    
    # We use pwndbg
    #install gef
    #wget -q -O- https://github.com/hugsy/gef/raw/master/scripts/gef.sh | sh;
    #sudo -H pip3 install keystone-engine ropper capstone unicorn requests;


    echo -e "#############################################################\n \
	               Installing pwndbg                     \n \
#############################################################\n";

    # Install pwndbg
    if [[ ! -d $TOOLS_PATH ]]; then
        mkdir $TOOLS_PATH
    fi
    git clone https://github.com/pwndbg/pwndbg $TOOLS_PATH
    cd $TOOLS_PATH/pwndbg
    ./setup.sh
fi


cd $SCRIPT_PATH

echo -e "#############################################################\n\
	               Setting up Environment                \n\
#############################################################\n";


#environment setup

# Old setup files
#wget -q -O setup-373.tar.bz2 https://web.engr.oregonstate.edu/~dmcgrath/setup-373.tar.bz2;
#tar xjvf environment.tar.gz -C ~/;

cp -r $SCRIPT_PATH/environment/* ~/ && cp -r $SCRIPT_PATH/environment/.[^.]* ~/
chsh --shell /bin/zsh;
exec $SHELL;

